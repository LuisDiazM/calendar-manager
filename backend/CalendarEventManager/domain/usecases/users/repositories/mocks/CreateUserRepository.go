// Code generated by mockery v2.26.1. DO NOT EDIT.

package mocks

import (
	entities "github.com/LuisDiazM/calendar-manager/calendar-event-manager/domain/usecases/users/entities"
	mock "github.com/stretchr/testify/mock"
)

// CreateUserRepository is an autogenerated mock type for the CreateUserRepository type
type CreateUserRepository struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: user
func (_m *CreateUserRepository) CreateUser(user entities.Users) error {
	ret := _m.Called(user)

	var r0 error
	if rf, ok := ret.Get(0).(func(entities.Users) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCreateUserRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreateUserRepository creates a new instance of CreateUserRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreateUserRepository(t mockConstructorTestingTNewCreateUserRepository) *CreateUserRepository {
	mock := &CreateUserRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
